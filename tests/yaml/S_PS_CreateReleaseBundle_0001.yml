resources:
  - name: S_PS_CreateReleaseBundle_0001_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: 'name'
      buildNumber: '1'
  - name: S_PS_CreateReleaseBundle_0001_ReleaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: s_distribution
      name: name
      version: '1'

pipelines:
  - name: pipeline_S_PS_CreateReleaseBundle_0001
    configuration:
      nodePool: win_2019
    steps:
      - name: S_PS_CreateReleaseBundle_0001_1
        type: PowerShell
        configuration:
          integrations:
            - name: s_artifactory
          outputResources:
            - name: S_PS_CreateReleaseBundle_0001_BuildInfo
        execution:
          onExecute:
            - Set-Content -Path S_PS_CreateReleaseBundle_0001.txt -Value ${run_id}
            - jfrog rt upload S_PS_CreateReleaseBundle_0001.txt test-automation-generic-local
            - jfrog rt build-publish ${JFROG_CLI_BUILD_NAME} ${JFROG_CLI_BUILD_NUMBER}
            - write_output S_PS_CreateReleaseBundle_0001_BuildInfo buildName=${JFROG_CLI_BUILD_NAME} buildNumber=${JFROG_CLI_BUILD_NUMBER}
      - name: S_PS_CreateReleaseBundle_0001_2
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: ${JFROG_CLI_BUILD_NAME}
          releaseBundleVersion: ${run_id}
          dryRun: true
          inputResources:
            - name: S_PS_CreateReleaseBundle_0001_BuildInfo
          outputResources:
            - name: S_PS_CreateReleaseBundle_0001_ReleaseBundle

      - name: S_PS_CreateReleaseBundle_0001_3
        type: PowerShell
        configuration:
          inputSteps:
            - name: S_PS_CreateReleaseBundle_0001_2
          integrations:
            - name: s_artifactory
            - name: s_distribution
        execution:
          onExecute:
            - |
              $encoded_auth = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("${int_s_distribution_user}:${int_s_distribution_apikey}"))
              check_no_verify_ssl
              $headers = @{'Authorization' = "Basic $encoded_auth";'Content-Type' = "application/json"}
              try {
                $request = Invoke-WebRequest "${int_s_distribution_url}/api/v1/release_bundle/${JFROG_CLI_BUILD_NAME}/${run_id}" -Method Get -Headers $headers -TimeoutSec 60 -ContentType 'application/json' -UseBasicParsing
                Write-Output $request
              } catch {
                $statusCode = $_.Exception.Response.StatusCode.Value__
                Write-Output $_.Exception.Response.StatusCode.Value__
              }
              if ( $statusCode -ne 404 ) { throw "Expected 404" }
