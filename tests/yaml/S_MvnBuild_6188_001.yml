template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_MvnBuild_6188_001_GitRepo
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation_bash.path }}
      branches:
        include: {{gitBranch}}

  - name: S_MvnBuild_6188_001_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory

pipelines:
  - name: pipeline_S_MvnBuild_6188_001
    configuration:
      environmentVariables:
        readOnly:
          JFROG_CLI_BUILD_NUMBER: ${run_id}
    steps:
      - name: S_MvnBuild_6188_001_1
        type: MvnBuild
        configuration:
          inputResources:
            - name: S_MvnBuild_6188_001_GitRepo
          outputResources:
            - name: S_MvnBuild_6188_001_BuildInfo
          integrations:
            - name: s_artifactory
          autoPublishBuildInfo: true
          sourceLocation: "tests/mvn"
          resolverSnapshotRepo: test-automation-mvn-remote
          resolverReleaseRepo: test-automation-mvn-remote
          deployerSnapshotRepo: test-automation-mvn-local
          deployerReleaseRepo: test-automation-mvn-local

      - name: S_MvnBuild_6188_001_2
        type: PowerShell
        configuration:
          inputResources:
            - name: S_MvnBuild_6188_001_BuildInfo
          integrations:
            - name: s_artifactory
        execution:
          onExecute:
            - $script:buildInfoFilePath = jfrog rt search "*/${JFROG_CLI_BUILD_NAME}/${run_id}*.json" | jq -r ".[0].path"
            - Write-Output $script:buildInfoFilePath

            - $script:buildInfo = jfrog rt search "*/${JFROG_CLI_BUILD_NAME}/${run_id}*.json" | ConvertFrom-Json
            - Write-Output $script:buildInfo
            - $script:buildInfoFilePath = $script:buildInfo[0].path
            - Write-Output $script:buildInfoFilePath
            - $buildInfoFileData = jfrog rt curl -XGET /api/storage/${buildInfoFilePath} | ConvertFrom-Json
            - $artifactSha = $buildInfoFileData.checksums.sha256
            - >
              if ( "${project_key}" -eq "") {
                $project = "default"
              } else {
                $project = "${project_key}"
              }
            - $artifactPath = "${project}/${JFROG_CLI_BUILD_NAME}/${run_id}"

            - $headers = @{}
            - $headers['Authorization'] = "apiToken $builder_api_token"
            - "Invoke-WebRequest \"${pipelines_api_url}/stepArtifacts?artifactPath=${artifactPath}&artifactSha=${artifactSha}&artifactType=buildInfo\" -Method Post -Headers `$headers -TimeoutSec 60 -ContentType 'application/json' -UseBasicParsing -OutFile \"${step_tmp_dir}${step_name}_stepArtifact.json\""

            - jfrog rt curl -XDELETE "/api/build/${JFROG_CLI_BUILD_NAME}?buildNumbers=${run_id}&artifacts=1"
            - $stepArtifact = type ${step_tmp_dir}\${step_name}_stepArtifact.json | ConvertFrom-Json
            - $stepArtifactSha = $stepArtifact.artifactSha
            - >
              if ("$stepArtifactSha" -ne "$artifactSha") {
                return 1
              }
