template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_PS_HBGDeploy_5978_0004_helm_resource
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: hbgdeploy-4
      buildNumber: 1

  - name: S_PS_HBGDeploy_5978_0004_git_resource
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation.path }}
      branches:
        include: master

pipelines:
  - name: S_PS_HBGDeploy_5978_0004
    configuration:
      nodePool: win_2019
      environmentVariables:
        readOnly:
          blue_release_name: "blue-hbgdeploy-ps-4"
          green_release_name: "green-hbgdeploy-ps-4"
          idle_name: "idle-hbgdeploy-ps-4"
          live_name: "live-hbgdeploy-ps-4"
          k8s_namespace: {{ .Values.Kubernetes.namespace }}
          JFROG_CLI_BUILD_NAME: hbgdeploy-4
    steps:
      - name: S_PS_HBGDeploy_5978_0004_1
        type: PowerShell
        configuration:
          integrations:
            - name: s_artifactory
          inputResources:
            - name: S_PS_HBGDeploy_5978_0004_git_resource
              trigger: false
          outputResources:
            - name: S_PS_HBGDeploy_5978_0004_helm_resource
        execution:
          onExecute:
            - jfrog --version
            - $json = @{key="simplecharts";rclass="local";packageType="helm";description="This repo is a test repo used by test automation";repoLayoutRef="simple-default"} | ConvertTo-Json -Compress  | Out-File c:\myrequest.json -Encoding Ascii -Force
            - jfrog rt repo-delete simplecharts; $global:LASTEXITCODE = 0
            - jfrog rt repo-create c:\myrequest.json
            - cd ${res_S_PS_HBGDeploy_5978_0004_git_resource_resourcePath}/tests/core/helmbluegreen
            - jfrog rt u index.yaml simplecharts --build-name=$JFROG_CLI_BUILD_NAME --build-number=$run_id
            - jfrog rt u simplehelm-0.3.0.tgz simplecharts --build-name=$JFROG_CLI_BUILD_NAME --build-number=$run_id
            - jfrog rt bce $JFROG_CLI_BUILD_NAME $run_id
            - jfrog rt bp $JFROG_CLI_BUILD_NAME $run_id
            - write_output S_PS_HBGDeploy_5978_0004_helm_resource buildName=$JFROG_CLI_BUILD_NAME buildNumber=$run_id
          onFailure:
            - jfrog rt repo-delete simplecharts; $global:LASTEXITCODE = 0

      - name: S_PS_HBGDeploy_5978_0004_2
        type: HelmBlueGreenDeploy
        configuration:
          inputSteps:
            - name: S_PS_HBGDeploy_5978_0004_1
          integrations:
            - name: s_artifactory
            - name: s_kubernetes
          inputResources:
            - name: S_PS_HBGDeploy_5978_0004_helm_resource
          chartPath: ./
          chartName: simplehelm
          chartVersion: 0.3.0
          namespace: ${k8s_namespace}
          blueReleaseName: ${blue_release_name}-${run_id}
          greenReleaseName: ${green_release_name}-${run_id}
          roleServices:
            - blueReferenceName: ${blue_release_name}-${run_id}-simplehelm
              greenReferenceName: ${green_release_name}-${run_id}-simplehelm
              idleName: ${idle_name}-${run_id}
              liveName: ${live_name}-${run_id}
        execution:
          onSuccess:
            - helm3 status ${blue_release_name}-${run_id}
            - kubectl get service ${idle_name}-${run_id}
          onComplete:
            - jfrog rt repo-delete simplecharts; $global:LASTEXITCODE = 0
            - helm3 delete ${blue_release_name}-${run_id} --namespace ${k8s_namespace}; $global:LASTEXITCODE = 0
            - kubectl delete service ${idle_name}-${run_id} --namespace ${k8s_namespace}; $global:LASTEXITCODE = 0
